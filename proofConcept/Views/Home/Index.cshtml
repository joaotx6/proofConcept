@model IEnumerable<proofConceptViewModel.WandViewModel.WandViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.wandId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.core)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.wood)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.flexibility)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.length)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.size)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @if (Model == null || !Model.Any())
        {
            <tr>
                <td colspan="3"> No Wands</td>
            </tr>

        }
        else
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.wandId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.core)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.wood)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.flexibility)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.length)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.size)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.wandId  }) |
                        @Html.ActionLink("Details", "Details", new { id=item.wandId  }) |

                    </td>
                </tr>
            }
        }
    </tbody>
</table>
